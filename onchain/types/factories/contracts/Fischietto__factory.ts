/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Fischietto,
  FischiettoInterface,
} from "../../contracts/Fischietto";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getMessage",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "message",
        type: "uint256[4]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reports",
    outputs: [
      {
        components: [
          {
            internalType: "euint256",
            name: "part1",
            type: "uint256",
          },
          {
            internalType: "euint256",
            name: "part2",
            type: "uint256",
          },
          {
            internalType: "euint256",
            name: "part3",
            type: "uint256",
          },
          {
            internalType: "euint256",
            name: "part4",
            type: "uint256",
          },
        ],
        internalType: "struct Fischietto.EncryptedMessage",
        name: "eMessage",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "company",
        type: "string",
      },
      {
        internalType: "string",
        name: "proof",
        type: "string",
      },
      {
        internalType: "string",
        name: "kid",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint256[4]",
        name: "_eMessage",
        type: "tuple[4]",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_company",
        type: "string",
      },
      {
        internalType: "string",
        name: "_proof",
        type: "string",
      },
      {
        internalType: "string",
        name: "_kid",
        type: "string",
      },
    ],
    name: "whistle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type FischiettoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FischiettoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Fischietto__factory extends ContractFactory {
  constructor(...args: FischiettoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Fischietto & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Fischietto__factory {
    return super.connect(runner) as Fischietto__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FischiettoInterface {
    return new Interface(_abi) as FischiettoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Fischietto {
    return new Contract(address, _abi, runner) as unknown as Fischietto;
  }
}
